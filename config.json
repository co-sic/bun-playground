{"engineConfig":{"defaultFlushInterval":"500","datasourceConfigurations":[{"kind":"GRAPHQL","rootNodes":[{"typeName":"Organization","fieldNames":["id","customerNumber","currentFeatureFlagProductIds"]},{"typeName":"Query","fieldNames":["organization"]}],"overrideFieldPathFromAlias":true,"customGraphql":{"fetch":{"url":{"staticVariableContent":"http://localhost:4501/graphql"},"method":"POST","body":{},"baseUrl":{},"path":{}},"subscription":{"enabled":true,"url":{"staticVariableContent":"http://localhost:4501/graphql"},"protocol":"GRAPHQL_SUBSCRIPTION_PROTOCOL_WS"},"federation":{"enabled":true,"serviceSdl":"extend schema\n@link(url: \"https://specs.apollo.dev/federation/v2.3\", import: [\"@key\"])\n{\n    query: Query\n}\n\ntype Organization @key(fields: \"id\")  {\n    id: ID!\n    customerNumber: String\n    currentFeatureFlagProductIds: [ID!]!\n}\n\ntype Query {\n    organization: Organization!\n}"},"upstreamSchema":{"key":"f56dce3007eccf8c1e10a078100a782d8f178bf4"}},"requestTimeoutSeconds":"10","id":"0","keys":[{"typeName":"Organization","selectionSet":"id"}]},{"kind":"GRAPHQL","rootNodes":[{"typeName":"Organization","fieldNames":["id","hasUnpaidFeatures"]},{"typeName":"Query","fieldNames":["hello"]}],"overrideFieldPathFromAlias":true,"customGraphql":{"fetch":{"url":{"staticVariableContent":"http://localhost:4502/graphql"},"method":"POST","body":{},"baseUrl":{},"path":{}},"subscription":{"enabled":true,"url":{"staticVariableContent":"http://localhost:4502/graphql"},"protocol":"GRAPHQL_SUBSCRIPTION_PROTOCOL_WS"},"federation":{"enabled":true,"serviceSdl":"extend schema\n@link(url: \"https://specs.apollo.dev/federation/v2.3\", import: [\"@key\", \"@requires\", \"@external\"])\n{\n    query: Query\n}\n\ntype Organization @key(fields: \"id\") {\n    id: ID!\n    currentFeatureFlagProductIds: [ID!]! @external\n    hasUnpaidFeatures: Boolean! @requires(fields: \"currentFeatureFlagProductIds\")\n}\n\ntype Query {\n    hello: String!\n}"},"upstreamSchema":{"key":"65f258d9578a1d786565c06e3f59ae0f44de906e"}},"requestTimeoutSeconds":"10","id":"1","keys":[{"typeName":"Organization","selectionSet":"id"}],"requires":[{"typeName":"Organization","fieldName":"hasUnpaidFeatures","selectionSet":"currentFeatureFlagProductIds"}]}],"graphqlSchema":"directive @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ndirective @authenticated on ENUM | FIELD_DEFINITION | INTERFACE | OBJECT | SCALAR\n\ndirective @inaccessible on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ndirective @requiresScopes(scopes: [[openfed__Scope!]!]!) on ENUM | FIELD_DEFINITION | INTERFACE | OBJECT | SCALAR\n\nscalar openfed__Scope\n\ntype Organization {\n  id: ID!\n  customerNumber: String\n  currentFeatureFlagProductIds: [ID!]!\n  hasUnpaidFeatures: Boolean!\n}\n\ntype Query {\n  organization: Organization!\n  hello: String!\n}","stringStorage":{"f56dce3007eccf8c1e10a078100a782d8f178bf4":"schema @link(url: \"https://specs.apollo.dev/federation/v2.3\", import: [\"@key\"]) {\n  query: Query\n}\n\ndirective @authenticated on ENUM | FIELD_DEFINITION | INTERFACE | OBJECT | SCALAR\n\ndirective @composeDirective(name: String!) repeatable on SCHEMA\n\ndirective @eventsPublish(sourceID: String, topic: String!) on FIELD_DEFINITION\n\ndirective @eventsRequest(sourceID: String, topic: String!) on FIELD_DEFINITION\n\ndirective @eventsSubscribe(sourceID: String, topic: String!) on FIELD_DEFINITION\n\ndirective @extends on INTERFACE | OBJECT\n\ndirective @external on FIELD_DEFINITION | OBJECT\n\ndirective @inaccessible on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ndirective @interfaceObject on OBJECT\n\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on INTERFACE | OBJECT\n\ndirective @link(as: String, for: String, import: [String], url: String!) repeatable on SCHEMA\n\ndirective @override(from: String!) on FIELD_DEFINITION\n\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requiresScopes(scopes: [[openfed__Scope!]!]!) on ENUM | FIELD_DEFINITION | INTERFACE | OBJECT | SCALAR\n\ndirective @shareable on FIELD_DEFINITION | OBJECT\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ntype Organization @key(fields: \"id\") {\n  currentFeatureFlagProductIds: [ID!]!\n  customerNumber: String\n  id: ID!\n}\n\ntype Query {\n  organization: Organization!\n}\n\nscalar openfed__FieldSet\n\nscalar openfed__Scope","65f258d9578a1d786565c06e3f59ae0f44de906e":"schema @link(url: \"https://specs.apollo.dev/federation/v2.3\", import: [\"@key\", \"@requires\", \"@external\"]) {\n  query: Query\n}\n\ndirective @authenticated on ENUM | FIELD_DEFINITION | INTERFACE | OBJECT | SCALAR\n\ndirective @composeDirective(name: String!) repeatable on SCHEMA\n\ndirective @eventsPublish(sourceID: String, topic: String!) on FIELD_DEFINITION\n\ndirective @eventsRequest(sourceID: String, topic: String!) on FIELD_DEFINITION\n\ndirective @eventsSubscribe(sourceID: String, topic: String!) on FIELD_DEFINITION\n\ndirective @extends on INTERFACE | OBJECT\n\ndirective @external on FIELD_DEFINITION | OBJECT\n\ndirective @inaccessible on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ndirective @interfaceObject on OBJECT\n\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on INTERFACE | OBJECT\n\ndirective @link(as: String, for: String, import: [String], url: String!) repeatable on SCHEMA\n\ndirective @override(from: String!) on FIELD_DEFINITION\n\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requiresScopes(scopes: [[openfed__Scope!]!]!) on ENUM | FIELD_DEFINITION | INTERFACE | OBJECT | SCALAR\n\ndirective @shareable on FIELD_DEFINITION | OBJECT\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ntype Organization @key(fields: \"id\") {\n  currentFeatureFlagProductIds: [ID!]! @external\n  hasUnpaidFeatures: Boolean! @requires(fields: \"currentFeatureFlagProductIds\")\n  id: ID!\n}\n\ntype Query {\n  hello: String!\n}\n\nscalar openfed__FieldSet\n\nscalar openfed__Scope"}},"subgraphs":[{"id":"0","name":"service-a","routingUrl":"http://localhost:4501/graphql"},{"id":"1","name":"service-b","routingUrl":"http://localhost:4502/graphql"}]}