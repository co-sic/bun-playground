{"engineConfig":{"defaultFlushInterval":"500","datasourceConfigurations":[{"kind":"GRAPHQL","rootNodes":[{"typeName":"Query","fieldNames":["offers"]}],"childNodes":[{"typeName":"LeadCustomer","fieldNames":["id","companyName"]},{"typeName":"Customer","fieldNames":["id","customerNumber","companyName"]},{"typeName":"Offer","fieldNames":["id"]},{"typeName":"NewCustomerOffer","fieldNames":["id","lead"]},{"typeName":"ExistingCustomerOffer","fieldNames":["id","customer"]},{"typeName":"AdditionalServiceOffer","fieldNames":["id","customer"]}],"overrideFieldPathFromAlias":true,"customGraphql":{"fetch":{"url":{"staticVariableContent":"http://localhost:4500/graphql"},"method":"POST","body":{},"baseUrl":{},"path":{}},"subscription":{"enabled":true,"url":{"staticVariableContent":"http://localhost:4500/graphql"},"protocol":"GRAPHQL_SUBSCRIPTION_PROTOCOL_WS"},"federation":{"enabled":true,"serviceSdl":"type LeadCustomer {\n    id: ID!\n    companyName: String!\n}\n\ntype Customer {\n    id: ID!\n    customerNumber: String!\n    companyName: String!\n}\n\ninterface Offer {\n    id: ID!\n}\n\ntype NewCustomerOffer implements Offer {\n    id: ID!\n    lead: LeadCustomer!\n}\n\ntype ExistingCustomerOffer implements Offer {\n    id: ID!\n    customer: Customer!\n}\n\ntype AdditionalServiceOffer implements Offer {\n    id: ID!\n    customer: Customer!\n}\n\ntype Query {\n    offers: [Offer!]!\n}"},"upstreamSchema":{"key":"04c4d753db250ff91ced72a78e82b8654184d932"}},"requestTimeoutSeconds":"10","id":"0"}],"graphqlSchema":"directive @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ninterface Offer {\n  id: ID!\n}\n\ntype LeadCustomer {\n  id: ID!\n  companyName: String!\n}\n\ntype Customer {\n  id: ID!\n  customerNumber: String!\n  companyName: String!\n}\n\ntype Query {\n  offers: [Offer!]!\n}\n\ntype NewCustomerOffer implements Offer {\n  id: ID!\n  lead: LeadCustomer!\n}\n\ntype ExistingCustomerOffer implements Offer {\n  id: ID!\n  customer: Customer!\n}\n\ntype AdditionalServiceOffer implements Offer {\n  id: ID!\n  customer: Customer!\n}","stringStorage":{"04c4d753db250ff91ced72a78e82b8654184d932":"schema {\n  query: Query\n}\n\ndirective @eventsPublish(sourceID: String, topic: String!) on FIELD_DEFINITION\n\ndirective @eventsRequest(sourceID: String, topic: String!) on FIELD_DEFINITION\n\ndirective @eventsSubscribe(sourceID: String, topic: String!) on FIELD_DEFINITION\n\ndirective @extends on INTERFACE | OBJECT\n\ndirective @external on FIELD_DEFINITION | OBJECT\n\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on INTERFACE | OBJECT\n\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ntype AdditionalServiceOffer implements Offer {\n  customer: Customer!\n  id: ID!\n}\n\ntype Customer {\n  companyName: String!\n  customerNumber: String!\n  id: ID!\n}\n\ntype ExistingCustomerOffer implements Offer {\n  customer: Customer!\n  id: ID!\n}\n\ntype LeadCustomer {\n  companyName: String!\n  id: ID!\n}\n\ntype NewCustomerOffer implements Offer {\n  id: ID!\n  lead: LeadCustomer!\n}\n\ninterface Offer {\n  id: ID!\n}\n\ntype Query {\n  offers: [Offer!]!\n}\n\nscalar openfed__FieldSet"}},"subgraphs":[{"id":"0","name":"server","routingUrl":"http://localhost:4500/graphql"}]}